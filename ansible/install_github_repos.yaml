---
- name: install GitHub repos
  gather_facts: false
  hosts: all
  vars_files:
    - package_lists.yaml
  vars:
    fonts_dir: "{{ lookup('env', 'HOME') }}/.local/share/fonts"
  pre_tasks:
    - setup:
        gather_subset:
          - distribution
          - system
      tags:
        - always
  tasks:
    - name: ensure base exists
      file:
        path: "{{ github_repo_base_dir }}"
        state: directory
    - name: get repos from GitHub
      git:
        repo: "https://github.com/{{ item }}.git"
        dest: "{{ github_repo_base_dir }}/{{ item.split('/')[1] }}"
      loop: "{{ default_github_repos }}"
    - name: make sure fonts dir exists
      file:
        path: "{{ fonts_dir }}"
        state: directory
      when: ansible_system == "Linux"
    - name: link codeface into fonts dir
      file:
        src: "{{ github_repo_base_dir }}/codeface"
        dest: "{{ fonts_dir }}/codeface"
        state: link
      when: ansible_system == "Linux"
    - name: update font cache
      command: fc-cache
      when: ansible_system == "Linux"
      changed_when: false
    - name: ensure zinit prefix exists
      file:
        path: "{{ lookup('env', 'HOME') }}/.zinit"
        state: directory
    - name: clone zinit
      git:
        repo: https://github.com/zdharma-continuum/zinit.git
        dest: "{{ lookup('env', 'HOME') }}/.zinit/bin"
    - name: ensure pyenv prefix exists
      file:
        path: "{{ lookup('env', 'HOME') }}/.pyenv"
        state: directory
    - name: install pyenv, but not on Arch or macOS
      git:
        repo: https://github.com/pyenv/pyenv.git
        dest: "{{ lookup('env', 'HOME') }}/.pyenv"
      when: ansible_distribution != "Archlinux"
    - name: see if ~/.clojure exists and is a git repo with the right remote
      git:
        repo: git@github.com:berquist/clojure-deps-edn.git
        dest: "{{ lookup('env', 'HOME') }}/.clojure"
        clone: no
        update: no
      register: clojure_dir_status
      changed_when: false
    - name: if ~/.clojure exists and isn't a git repo with the right remote, remove it
      file:
        path: "{{ lookup('env', 'HOME') }}/.clojure"
        state: absent
      when: not clojure_dir_status.before
    - name: install personal Clojure deps
      git:
        repo: git@github.com:berquist/clojure-deps-edn.git
        dest: "{{ lookup('env', 'HOME') }}/.clojure"
    - name: clone Spack
      git:
        repo: https://github.com/spack/spack.git
        dest: "{{ spack_root }}"
        version: develop
