# For useful information about most of these options, see
# https://git-scm.com/docs/git-config

[user]
    name = Eric Berquist
    email = eric.berquist@gmail.com
    # signingkey = BAFD205D

[core]
    # When using the emacs daemon, just `emacs` is a problem;
    # `--no-window-system` forces a separate process and to open in a
    # terminal, not a GUI.
    editor = emacs -nw
    autocrlf = input
    safecrlf = warn

# Available colors are enumerated in
# http://stackoverflow.com/questions/15458237/git-pretty-format-colors
[color]
    # `ui` probably sets all of these to auto, but meh
    ui = auto
    branch = auto
    diff = auto
    grep = auto
    interactive = auto
    pager = true
    showBranch = auto
    status = auto

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    whitespace = red blink

[color "status"]
    branch = blue
    nobranch = normal blink
    untracked = cyan
    unmerged = yellow

[push]
    default = simple

[merge]
    conflictstyle = diff3
    verbosity = 3

[alias]
    branches = branch -a -v
    remotes = remote -v
    st = status -sb
    # These do the same thing (--cached and --staged, that is).
    dc = diff --cached
    ds = diff --staged

    # http://stackoverflow.com/questions/6017987/how-can-i-list-all-the-deleted-files-in-a-git-repository
    show-deleted = log --diff-filter=D --summary
    show-deleted2 = !git log --all --pretty=format: --name-only --diff-filter=D | sort -u
    # Similar to the default, but with some labels.
    l = log --color --decorate --abbrev-commit --date=iso
    # gitk style, very pretty mhmmmm
    lg = !git l --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue) <%an>%Creset'

    ## Let's do some destructive stuff.
    # Add more things to the last commit on the current head, with the
    # ability to rewrite the commit message.
    amend = commit --amend -c HEAD
    # Nicely go back a commit.
    undo = reset --soft HEAD~1

    ## Useful for LaTeX.
    ## Taken from https://wiki.math.cmu.edu/iki/wiki/tips/20140301-git-latexdiff.html
    # use like: git wdiff HEAD~1
    wdiff = diff --color-words --ignore-all-space
    # use like: git ldiff HEAD~1
    ldiff = difftool -y -t latex

[difftool.latex]
    # Needs the `ldiff` script.
    cmd = ldiff "$LOCAL" "$REMOTE" "$MERGED"

# Where did this come from?
[filter "lfs"]
    smudge = git-lfs smudge %f
    required = true
    clean = git-lfs clean %f
# [commit]
# 	gpgsign = true
