#!/bin/bash

export PS1='\u@\h:\w
\$ '

export SCRATCH=/scratch
export HOME1=/dftman/home1/ericb
export HOME2=/dftman/home2/ericb

if [[ "${HOSTNAME}" == "coreman4" ]]; then
    source "${HOME2}"/spack/share/spack/setup-env.sh
elif [[ "${HOSTNAME}" == "cheetah" ]]; then
    source "${HOME2}"/spack_cheetah/share/spack/setup-env.sh
# TODO base Python 3 too old, force Python 2?
elif [[ "${HOSTNAME}" == "dellman4" ]]; then
    source "${HOME2}"/spack_dellman4/share/spack/setup-env.sh
elif [[ "${HOSTNAME}" == "dellman5" ]]; then
    source "${HOME2}"/spack_dellman5/share/spack/setup-env.sh
elif [[ "${HOSTNAME}" == "gpuman2.q-chem.com" ]]; then
    source "${HOME2}"/spack_gpuman2/share/spack/setup-env.sh
fi

export PYENV_ROOT="${HOME2}/pyenv"
[[ -d "${PYENV_ROOT}/bin" ]] && export PATH="${PYENV_ROOT}/bin:${PATH}"
if command -v pyenv >/dev/null 2>&1; then
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
fi
if command -v pyenv-virtualenv-init 1>/dev/null 2>&1; then eval "$(pyenv virtualenv-init -)"; fi

[[ -f "${HOME}/.bashrc" ]] && source "${HOME}/.bashrc"

# Rust
[[ -f "${HOME}/.cargo/env" ]] && source "${HOME}/.cargo/env"

module use "${HOME}"/modules/work
if [[ "${HOSTNAME}" == "coreman4" ]]; then
    module use "${HOME}"/modules/coreman4
fi
